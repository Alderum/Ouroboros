// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VBTBotConsole3;

#nullable disable

namespace VBTBotConsole3.Migrations
{
    [DbContext(typeof(Model))]
    [Migration("20250506153239_OrderMigration")]
    partial class OrderMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("Binance.Net.Objects.Models.Futures.BinanceFuturesOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "orderId");

                    b.Property<decimal?>("ActivatePrice")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "activatePrice");

                    b.Property<decimal>("AveragePrice")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "avgPrice");

                    b.Property<decimal?>("BaseQuantityFilled")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "cumBase");

                    b.Property<decimal?>("CallbackRate")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "priceRate");

                    b.Property<string>("ClientOrderId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "clientOrderId");

                    b.Property<bool>("ClosePosition")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "closePosition");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "time");

                    b.Property<decimal?>("CummulativeQuantity")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "cumQty");

                    b.Property<int>("OriginalType")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "origType");

                    b.Property<string>("Pair")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "pair");

                    b.Property<int>("PositionSide")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "positionSide");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "price");

                    b.Property<int>("PriceMatch")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "priceMatch");

                    b.Property<bool>("PriceProtect")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "priceProtect");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "origQty");

                    b.Property<decimal>("QuantityFilled")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "executedQty");

                    b.Property<decimal?>("QuoteQuantityFilled")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "cumQuote");

                    b.Property<bool>("ReduceOnly")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "reduceOnly");

                    b.Property<int?>("SelfTradePreventionMode")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "selfTradePreventionMode");

                    b.Property<int>("Side")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "side");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "status");

                    b.Property<decimal?>("StopPrice")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "stopPrice");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "symbol");

                    b.Property<int>("TimeInForce")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "timeInForce");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "type");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "updateTime");

                    b.Property<int>("WorkingType")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "workingType");

                    b.HasKey("Id");

                    b.ToTable("BinanceFuturesOrders");
                });

            modelBuilder.Entity("VBTBotConsole3.Kline", b =>
                {
                    b.Property<int>("KlineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Close")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("High")
                        .HasColumnType("TEXT");

                    b.Property<int>("Interval")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Low")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Open")
                        .HasColumnType("TEXT");

                    b.HasKey("KlineId");

                    b.ToTable("Klines");
                });
#pragma warning restore 612, 618
        }
    }
}
