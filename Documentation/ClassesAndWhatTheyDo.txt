<<<<<<< HEAD
﻿ТЛУМАЧЕННЯ ВСІХ КЛАСІВ ТА ЇХ ФУНКЦІОНАЛЬНОСТІ

	Analitics
Всі класи з цієї папки використовуються суто для аналітики. Аналітика потрібна для
розуміння всієї картини та як насправді виглядають справи. Воно допомагає не повестися
на одноразовий успіх стратегії та будувати довгостроково-успішну.

BuyPosition
  Цей клас означає позицію лонг та має в собі:
+ час відкриття/закриття
+ ціна по якій була відкрита/закрита
+ вартість, котра = ціна закриття позиції - ціна її відкриття
Реалізує інтерфейс IPosition

SellPosition
  Цей клас означає позицію шорт та має в собі:
+ час відкриття/закриття
+ ціна по якій була відкрита/закрита
+ вартість, котра = ціна відкриття позиції - ціна її закриття
Реалізує інтерфейс IPosition

IPosition
  Інтерфейс, котрий дозволяє узагальнити класи лонгів та шортів. Він потрібний для
універсалізації та легкості в підводі статистики. Змушує реалізувати данні поля:
+ час відкриття/закриття
+ ціна по якій була відкрита/закрита
+ вартість (не відомо по якій формулі)
+ закрита позиція, чи ні

	Indicators
AdaptiveEnvelope
  Ключовий клас для моєї стратегії. Потрібен для визначення адаптивної ковзаючої.
Використовує в собі статичний метод MovingAvarages.ATRFromTV() томущо в трейдінг в'ю атр
вираховується інакше, ніж то прийнято в нормальному суспільстві. Є метод, котрий
повертає об'єкти адаптивної ковзаючої з однаковими індексами та часом до кожного кандлу.

MovingAvarages
  В цьому класі знаходяться всі дослідженні меною ковзаючі руху. Всі методи є статичними.
Вони викликаються, коли ти передаєш їм лист класів Kline та глибину для вирахування.
Також сам клас в собі являє об'єкт середньої, котрий потім можна використати.
Складається з:
+ вартість
+ час
+ глибина
Всі методи повертають збір об'єктів MovingAvarage - це круто.

	Вільні класи
Indicator
  Надпотужний клас; з ним треба щось зробити, бо він має на собі купу відповідальності.
Тут ми маємо повністю зреалізований метод аналітики, котрий працює по сигналам. Методи
набору та скиду позцій. В ньому використовується клас Kline, MovingAvarage, 
AdaptiveEnvelope. Солянка загалом.

Kline
  Основний клас, котрий є основою таблиці EntityFramework Model. Також широко
використовується в інших класах для отримання потрібної інформації. Має в собі таку інфу:
+ мкс/мін ціни кандлу
+ відкриття/закриття кандлу
+ ідентифікатор
+ час початку

Model
  База даних нашого бота. Тут є таблиця на основі класу Kline.

Program
  Тут реалізований інтерфейс для користувача та з відси викликаються більшість евентів.
Взагалі - це початковий клас.

Controller
  Він має властивості, котрі дозволяють на доступ до TraderConroller та ModelController.
Ініціалізує та передає всі потрібні данні до інших контрллерів. Активно використовується
користувачем для спілкування з середовища з об'єктами та класами програми.

TraderController
  Він вміє виставляти ордери, закривати їх та показувати їх. Також є функціонал
перевірки, чи аутентифікований користувач.

ModelController
=======
﻿ТЛУМАЧЕННЯ ВСІХ КЛАСІВ ТА ЇХ ФУНКЦІОНАЛЬНОСТІ

	Analitics
Всі класи з цієї папки використовуються суто для аналітики. Аналітика потрібна для
розуміння всієї картини та як насправді виглядають справи. Воно допомагає не повестися
на одноразовий успіх стратегії та будувати довгостроково-успішну.

BuyPosition
  Цей клас означає позицію лонг та має в собі:
+ час відкриття/закриття
+ ціна по якій була відкрита/закрита
+ вартість, котра = ціна закриття позиції - ціна її відкриття
Реалізує інтерфейс IPosition

SellPosition
  Цей клас означає позицію шорт та має в собі:
+ час відкриття/закриття
+ ціна по якій була відкрита/закрита
+ вартість, котра = ціна відкриття позиції - ціна її закриття
Реалізує інтерфейс IPosition

IPosition
  Інтерфейс, котрий дозволяє узагальнити класи лонгів та шортів. Він потрібний для
універсалізації та легкості в підводі статистики. Змушує реалізувати данні поля:
+ час відкриття/закриття
+ ціна по якій була відкрита/закрита
+ вартість (не відомо по якій формулі)
+ закрита позиція, чи ні

	Indicators
AdaptiveEnvelope
  Ключовий клас для моєї стратегії. Потрібен для визначення адаптивної ковзаючої.
Використовує в собі статичний метод MovingAvarages.ATRFromTV() томущо в трейдінг в'ю атр
вираховується інакше, ніж то прийнято в нормальному суспільстві. Є метод, котрий
повертає об'єкти адаптивної ковзаючої з однаковими індексами та часом до кожного кандлу.

MovingAvarages
  В цьому класі знаходяться всі дослідженні меною ковзаючі руху. Всі методи є статичними.
Вони викликаються, коли ти передаєш їм лист класів Kline та глибину для вирахування.
Також сам клас в собі являє об'єкт середньої, котрий потім можна використати.
Складається з:
+ вартість
+ час
+ глибина
Всі методи повертають збір об'єктів MovingAvarage - це круто.

	Вільні класи
Indicator
  Надпотужний клас; з ним треба щось зробити, бо він має на собі купу відповідальності.
Тут ми маємо повністю зреалізований метод аналітики, котрий працює по сигналам. Методи
набору та скиду позцій. В ньому використовується клас Kline, MovingAvarage, 
AdaptiveEnvelope. Солянка загалом.

Kline
  Основний клас, котрий є основою таблиці EntityFramework Model. Також широко
використовується в інших класах для отримання потрібної інформації. Має в собі таку інфу:
+ мкс/мін ціни кандлу
+ відкриття/закриття кандлу
+ ідентифікатор
+ час початку

Model
  База даних нашого бота. Тут є таблиця на основі класу Kline.

Program
  Тут реалізований інтерфейс для користувача та з відси викликаються більшість евентів.
Взагалі - це початковий клас.

Controller
  Він має властивості, котрі дозволяють на доступ до TraderConroller та ModelController.
Ініціалізує та передає всі потрібні данні до інших контрллерів. Активно використовується
користувачем для спілкування з середовища з об'єктами та класами програми.

TraderController
  Він вміє виставляти ордери, закривати їх та показувати їх. Також є функціонал
перевірки, чи аутентифікований користувач.

ModelController
>>>>>>> cdbc10e (Initial commit from Bash)
  Працює з класом Model. З нього можна скачати та оновити дані в базі даних.